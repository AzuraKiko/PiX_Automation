<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Run On CHROME"
           tests="5"
           failures="3"
           errors="0"
           skipped="0"
           time="85.472">
  <properties />
            <testcase name="PIX_BF_005_VerifyPlaceNewOrder" time="6.837" classname="PIX.BeforeTradingTime">
                <failure type="java.lang.AssertionError"
                  message="Can not place order expected [Market closed] but found [Out of price range]"
              >
<![CDATA[java.lang.AssertionError: Can not place order expected [Market closed] but found [Out of price range]
  org.testng.Assert.fail(Assert.java:99)
  org.testng.Assert.failNotEquals(Assert.java:1037)
  org.testng.Assert.assertEqualsImpl(Assert.java:140)
  org.testng.Assert.assertEquals(Assert.java:122)
  org.testng.Assert.assertEquals(Assert.java:629)
  PIX.BeforeTradingTime.PIX_BF_005_VerifyPlaceNewOrder(BeforeTradingTime.java:178)
  java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
  java.base/java.lang.reflect.Method.invoke(Method.java:580)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
  org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
  org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
  org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
  org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
  org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
  java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
  java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  java.base/java.lang.Thread.run(Thread.java:1570)
]]>
      </failure>

          </testcase>
            <testcase name="PIX_BF_002_VerifySummaryData" time="13.049" classname="PIX.BeforeTradingTime">
                <failure type="java.lang.AssertionError"
                  message="expected [0.0] but found [908.0]"
              >
<![CDATA[java.lang.AssertionError: expected [0.0] but found [908.0]
  org.testng.Assert.fail(Assert.java:99)
  org.testng.Assert.failNotEquals(Assert.java:1037)
  org.testng.Assert.assertEquals(Assert.java:701)
  org.testng.Assert.assertEquals(Assert.java:712)
  PIX.BeforeTradingTime.PIX_BF_002_VerifySummaryData(BeforeTradingTime.java:68)
  java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
  java.base/java.lang.reflect.Method.invoke(Method.java:580)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
  org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
  org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
  org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
  org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
  org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
  java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
  java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  java.base/java.lang.Thread.run(Thread.java:1570)
]]>
      </failure>

          </testcase>
            <testcase name="PIX_BF_003_VerifyBlankPendingOrder" time="33.293" classname="PIX.BeforeTradingTime">
                <failure type="java.lang.AssertionError"
                  message="expected [true] but found [false]"
              >
<![CDATA[java.lang.AssertionError: expected [true] but found [false]
  org.testng.Assert.fail(Assert.java:99)
  org.testng.Assert.failNotEquals(Assert.java:1037)
  org.testng.Assert.assertTrue(Assert.java:45)
  org.testng.Assert.assertTrue(Assert.java:55)
  PIX.BeforeTradingTime.PIX_BF_003_VerifyBlankPendingOrder(BeforeTradingTime.java:80)
  java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
  java.base/java.lang.reflect.Method.invoke(Method.java:580)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
  org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
  org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
  org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
  org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
  org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
  java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
  java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  java.base/java.lang.Thread.run(Thread.java:1570)
]]>
      </failure>

          </testcase>
  
  
            <testcase name="PIX_BF_001_VerifyClosePrice" time="5.571" classname="PIX.BeforeTradingTime" />
                <testcase name="PIX_BF_004_VerifyDefaultSetting" time="26.722" classname="PIX.BeforeTradingTime" />
      
</testsuite>
